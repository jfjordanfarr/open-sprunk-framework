<!-- filepath: g:\My Drive\Projects\Toy Projects\Spruki-Like-Game\docs\Units\core\app-core-class.mdmd -->
::: {unit}
id: "app-core-class"
unit-type: "javascript-class-definition"
language: "javascript" 
status: "draft"
version: "0.2"
brief: "Main application orchestrator that manages global state and coordinates between modules."
source-ref: "../../src/core/AppCore.js"

The AppCore class serves as the central coordinator for the entire application, managing shared resources and facilitating communication between modules.

```javascript
import { EventBus } from './EventBus.js';
import { StateManager } from './StateManager.js';
import { DataManager } from '../data/DataManager.js';

export class AppCore {
    constructor() {
        this.eventBus = null;
        this.stateManager = null;
        this.dataManager = null;
        this.initialized = false;
    }

    async init() {
        if (this.initialized) {
            return;
        }
        
        this.eventBus = new EventBus();
        this.stateManager = new StateManager();
        // DataManager might be initialized and passed in, or initialized here
        // For now, assume it's available globally or passed via bootstrap
        // this.dataManager = new DataManager(); 
        // await this.dataManager.init();

        // Example: Listen for a global event
        this.eventBus.subscribe('project:load', (projectData) => {
            this.stateManager.setProjectData(projectData);
        });

        this.initialized = true;
        console.log('AppCore initialized');
    }

    // Example method to access a shared service
    getEventBus() {
        return this.eventBus;
    }

    // Example method to access global state
    getAppState() {
        return this.stateManager.getState();
    }
}
```
:::
